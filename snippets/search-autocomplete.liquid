<script src="https://cdnjs.cloudflare.com/ajax/libs/template7/1.4.0/template7.js"></script>

<script>
    (function ($) {
        var pluginName = 'Search',
        namespace = 'plugin_' + pluginName;

        function Plugin(element) {
            this.headerSearch = $(element);
            this.headerSearchForm = this.headerSearch.find('.header-search__form');
            this.headerInput = this.headerSearch.find('.header-search__input');
            this.headerSearchResults = this.headerSearch.find('.header-search__results-wrapper');
            this.searchResultsTemplate = Template7.compile($('#search-results-template').html());
            this.PopularProducts = this.headerSearch.find(".header-search__product");
            this.searchMode = "product";
            this.searchTrending = $(".quickSearchResultsWrap .header-search__trending .item");
            this.trending = $(".header-search__trending");
            this.searchWrapper = this.headerSearch.find('.quickSearchResultsWrap');

            this.headerInput.focus(function(e){
                e.stopPropagation();
                
                $(this).closest('.header-search').find('.quickSearchResultsWrap').show();
                $('html').addClass('search-dropdown-open');
            });

            $(document).mouseup(function (e) {
                var container = $(".search-form");

                if (!container.is(e.target) && container.has(e.target).length === 0){
                    container.find('.quickSearchResultsWrap').hide();
                }
            });

            this.headerInput.on('focusin', $.proxy(this._focusin, this));


            this.headerInput.on('keyup', $.proxy(this._initSearch, this));
        };

        Plugin.prototype._initSearch = function(event) {
            var target = $(event.currentTarget);

            if ((event.keyCode ? event.keyCode : event.which) != 13) {
                clearTimeout(target.data('timeout'));
                target.data('timeout', setTimeout($.proxy(this._doSearch, this), 250));
            }
        };

        Plugin.prototype._doSearch = function(event) {

            if (this.headerInput.val().trim() === '') {
                this.headerSearchResults.empty();
                this.searchTrending.show();
                this.PopularProducts.show();
                this.searchWrapper.show();
                this.trending.show();

                return; 
            }
            else {
                this.headerSearchResults.html(this.searchResultsTemplate({is_loading: true}));
            }

            if (this.headerInput.val().length > 0) {
                this.searchWrapper.hide();
                this._doCompleteSearch();
            }
            else {
                this.headerSearchResults.html(this.searchResultsTemplate({is_show: false}));
                this.searchTrending.show();
                this.PopularProducts.show();
                this.searchWrapper.show();
            }

            if(this.searchTrending.css('display') == 'none') {
                this.trending.hide();
            } else {
                this.trending.show();
            }
        };

        Plugin.prototype._doCompleteSearch = function(event) {
            var self = this;
          /* this will return 10 products max:
            $.ajax({
              method: 'GET',
              url: window.router + '/search/suggest.json?q=' + this.headerInput.val() + '*' + '&resources[type]=product',
              dataType: 'json',
              data: {
                  q: this.headerInput.val() + '*',
                  type: this.searchMode
              }
          }).then(function(data) {
              console.log(data);
            });
          */
          

            $.ajax({
                method: 'GET',
                url: window.router + '/search?view=json',
                dataType: 'json',
                data: {
                    q: this.headerInput.val() + '*',
                    type: this.searchMode
                }
            }).then(function(data) {
                //console.log(data);
                //console.log(window.router + '/search?view=json');
                self.headerSearchResults.html(self.searchResultsTemplate({
                    is_show: true,
                    is_loading: false,
                    results: data['results'],
                    has_results: (data['results'].length > 0),
                    results_count: data['results_count'],
                    results_label: data['results_label'],
                    title_heading: data['title_heading'],
                    results_url: (data['url'] + '&type=' + self.searchMode)
                }));
    
                if (window.innerWidth < 551) {
                  /*
                  self.headerSearchResults.find('.products-grid').addClass('slick-slider');
                  self.headerSearchResults.find('.products-grid').slick({
                      slidesToShow:5,
                      dots: true,
                      speed: 800,
                      arrows: true,
                      get nextArrow() {
                        if ((window.layout_style == 'layout_style_1170') || (window.layout_style == 'layout_style_flower')) {
                            return this.nextArrow = '<button type="button" aria-label="Next Product" class="slick-next"><svg viewBox="0 0 50 50"><path d="M 11.957031 13.988281 C 11.699219 14.003906 11.457031 14.117188 11.28125 14.308594 L 1.015625 25 L 11.28125 35.691406 C 11.527344 35.953125 11.894531 36.0625 12.242188 35.976563 C 12.589844 35.890625 12.867188 35.625 12.964844 35.28125 C 13.066406 34.933594 12.972656 34.5625 12.71875 34.308594 L 4.746094 26 L 48 26 C 48.359375 26.003906 48.695313 25.816406 48.878906 25.503906 C 49.058594 25.191406 49.058594 24.808594 48.878906 24.496094 C 48.695313 24.183594 48.359375 23.996094 48 24 L 4.746094 24 L 12.71875 15.691406 C 13.011719 15.398438 13.09375 14.957031 12.921875 14.582031 C 12.753906 14.203125 12.371094 13.96875 11.957031 13.988281 Z"></path></svg></button>';
                        } else {
                            return this.nextArrow = '<button type="button" aria-label="Next Product" class="slick-next"><svg viewBox="0 0 478.448 478.448" class="icon icon-chevron-right" id="icon-chevron-right"><g><g><polygon points="131.659,0 100.494,32.035 313.804,239.232 100.494,446.373 131.65,478.448 377.954,239.232"></polygon></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg></button>';
                        }
                      },
                      get prevArrow() {
                          if ((window.layout_style == 'layout_style_1170') || (window.layout_style == 'layout_style_flower')) {
                              return this.prevArrow = '<button type="button" aria-label="Previous Product" class="slick-prev"><svg viewBox="0 0 50 50"><path d="M 11.957031 13.988281 C 11.699219 14.003906 11.457031 14.117188 11.28125 14.308594 L 1.015625 25 L 11.28125 35.691406 C 11.527344 35.953125 11.894531 36.0625 12.242188 35.976563 C 12.589844 35.890625 12.867188 35.625 12.964844 35.28125 C 13.066406 34.933594 12.972656 34.5625 12.71875 34.308594 L 4.746094 26 L 48 26 C 48.359375 26.003906 48.695313 25.816406 48.878906 25.503906 C 49.058594 25.191406 49.058594 24.808594 48.878906 24.496094 C 48.695313 24.183594 48.359375 23.996094 48 24 L 4.746094 24 L 12.71875 15.691406 C 13.011719 15.398438 13.09375 14.957031 12.921875 14.582031 C 12.753906 14.203125 12.371094 13.96875 11.957031 13.988281 Z"></path></svg></button>';
                          } else {
                              return this.prevArrow = '<button type="button" aria-label="Previous Product" class="slick-prev"><svg viewBox="0 0 370.814 370.814" class="icon icon-chevron-left" id="icon-chevron-left"><g><g><polygon points="292.92,24.848 268.781,0 77.895,185.401 268.781,370.814 292.92,345.961 127.638,185.401"></polygon></g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg></button>';
                          }
                      },
                      responsive: [{
                              breakpoint: 1200,
                              settings: {
                                  slidesPerRow: 1,
                                  slidesToShow: 3
                              }
                          },
                          {
                              breakpoint: 992,
                              settings: {
                                  slidesPerRow: 1,
                                  slidesToShow: 2
                              }
                          },
                          {
                              breakpoint: 768,
                              settings: {
                                  slidesPerRow: 1,
                                  slidesToShow: 1,
                                  dots: true
                              }
                          }
                      ]
                  });
                  */
                }            
                self.PopularProducts.hide();


                var value = self.headerInput.val().toLowerCase();
                if (data && data.length) {
                    self.searchTrending.filter(function(e) {
                        $(this).toggle($(this).find('.highlight span').text().toLowerCase().indexOf(value) > -1);
                    });
                    self.trending.show();
                }
                else {
                    self.trending.hide();
                }

                self.searchWrapper.show();
            });
        };

        $.fn[pluginName] = function(options) {
            var method = false,
            methodArgs = arguments;

            if (typeof options == 'string') {
                method = options;
            }

            return this.each(function() {
                var plugin = $.data(this, namespace);

                if (!plugin && !method) {
                    $.data(this, namespace, new Plugin(this, options));
                } else if (method) {
                    callMethod(plugin, method, Array.prototype.slice.call(methodArgs, 1));
                }
            });
        };
    }(jQuery));

    $(function() {
        $('[data-ajax-search]').Search();
    });
</script>
